// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using OrderApp.Models;

namespace OrderApp.Migrations
{
    [DbContext(typeof(OrderAppContext))]
    [Migration("20190127133405_Update")]
    partial class Update
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.0-rtm-35687")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("OrderApp.Model.Admin", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Email");

                    b.Property<string>("Name");

                    b.Property<string>("Password");

                    b.HasKey("ID");

                    b.ToTable("Admin");
                });

            modelBuilder.Entity("OrderApp.Model.Customer", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Email");

                    b.Property<string>("Name");

                    b.Property<string>("Password");

                    b.HasKey("ID");

                    b.ToTable("Customer");
                });

            modelBuilder.Entity("OrderApp.Model.MenuItem", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description");

                    b.Property<string>("Name");

                    b.Property<double>("Price");

                    b.HasKey("ID");

                    b.ToTable("MenuItem");
                });

            modelBuilder.Entity("OrderApp.Model.Order", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("CompletionTime");

                    b.Property<DateTime>("CreationTime");

                    b.Property<int?>("CustomerID");

                    b.Property<int?>("restaurantID");

                    b.HasKey("ID");

                    b.HasIndex("CustomerID");

                    b.HasIndex("restaurantID");

                    b.ToTable("Order");
                });

            modelBuilder.Entity("OrderApp.Model.OrderMenuItem", b =>
                {
                    b.Property<int>("OrderId");

                    b.Property<int>("MenuItemId");

                    b.HasKey("OrderId", "MenuItemId");

                    b.HasIndex("MenuItemId");

                    b.ToTable("OrderMenuItem");
                });

            modelBuilder.Entity("OrderApp.Model.Restaurant", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Address");

                    b.Property<string>("Email");

                    b.Property<int?>("MenuItemID");

                    b.Property<string>("Name");

                    b.Property<string>("Password");

                    b.HasKey("ID");

                    b.HasIndex("MenuItemID");

                    b.ToTable("Restaurant");
                });

            modelBuilder.Entity("OrderApp.Model.Order", b =>
                {
                    b.HasOne("OrderApp.Model.Customer")
                        .WithMany("Orders")
                        .HasForeignKey("CustomerID");

                    b.HasOne("OrderApp.Model.Restaurant", "Restaurant")
                        .WithMany()
                        .HasForeignKey("restaurantID");
                });

            modelBuilder.Entity("OrderApp.Model.OrderMenuItem", b =>
                {
                    b.HasOne("OrderApp.Model.MenuItem", "menuItem")
                        .WithMany("Orders")
                        .HasForeignKey("MenuItemId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("OrderApp.Model.Order", "order")
                        .WithMany("Items")
                        .HasForeignKey("OrderId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("OrderApp.Model.Restaurant", b =>
                {
                    b.HasOne("OrderApp.Model.MenuItem")
                        .WithMany("Restaurant")
                        .HasForeignKey("MenuItemID");
                });
#pragma warning restore 612, 618
        }
    }
}
